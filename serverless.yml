# Welcome to Serverless!
#
# For full config options, check the docs:
#    docs.serverless.com

service: sudoku-backend

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: arn:aws:dynamodb:us-east-1:*

# you can define service wide environment variables here
#  environment:
#    variable1: value1

functions:
  puzzles:
    handler: src/puzzles-handler.handle
    memorySize: 256
    description: Handler for puzzle operations.
    events:
      - http:
          path: puzzles/new/{difficulty}
          method: get
          cors: true
          request:
            parameters:
              paths:
                difficulty: true
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:us-east-1:262375365616:userpool/us-east-1_mTowUagf1
  users:
    handler: src/users-handler.handle
    memorySize: 256
    description: Handler for user operations.
    events:
      - http:
          path: users
          method: get
          cors: true
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:us-east-1:262375365616:userpool/us-east-1_mTowUagf1
      - http:
          path: users
          method: put
          cors: true
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:us-east-1:262375365616:userpool/us-east-1_mTowUagf1
  post-confirmation:
    handler: src/users-handler.confirm
    memorySize: 256
    description: Handler for saving user to DB after post confirmation.

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - websocket: $connect
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
